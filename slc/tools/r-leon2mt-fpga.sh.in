#! @BASH@
# Run script for LEON2-MT binaries.
PS4='+ r-leon2mt-fpga($$): '
if test -n "${TRACE:-}"; then set -x; fi
set -eu
basename=${0##*/}
program=${1:?}
fdatafile=${2:?}
shift
shift

SLR_ORIGPWD=${SLR_ORIGPWD:-.}
TBDEF=${TBDEF:-./tbdef}
SIMARGS=${SIMARGS:---ieee-asserts=disable}
slc_datadir=${SLC_DATADIR:-@slc_datadir@}
slc_libdir=${SLC_LIBDIR:-@slc_libdir@}
SIMARGS=${SIMARGS:-}
SIMGFX=${SIMGFX:-}
python=${PYTHON:-@python@}
simargs_base=()

mkdir -p "$TMPDIR"
if ! test -d "$TMPDIR" -a -w "$TMPDIR"; then
    echo "$TMPDIR (\$TMPDIR) not found, not writable or not a directory" >&2
fi

# Search for viewing utility
view_script=
saveIFS=$IFS
IFS=:
for l in $slc_libdir; do
    if test -r "$l/leon2mt-sim-ctl"; then
	view_script=$l/leon2mt-sim-ctl
	break
    fi
done
IFS=$saveIFS
if test -z "$view_script"; then
    echo "cannot find leon2mt-sim-ctl in $slc_libdir" >&2
    exit 1
fi
dv=$(dirname "$view_script")
dv=$(cd "$dv" && pwd -P)
view_script=$dv/${view_script##*/}

# Extract absolute location of simulator
if ! test -x "$TBDEF"; then
    echo "$TBDEF (\$TBDEF) not found or not executable" >&2
    exit 1
fi
dTBDEF=$(dirname "$TBDEF")
dTBDEF=$(cd "$SLR_ORIGPWD" && cd "$dTBDEF" && pwd -P)
TBDEF=$dTBDEF/${TBDEF##*/}


# extract basename and directory of input ELF file
b=${program##*/}
d=$(dirname "$program")
d=$(cd "$d" && pwd -P)

# Convert program binary
echo "Running from $TMPDIR..." >/dev/tty
cd "$TMPDIR"
if test -n "${VERBOSE:-}"; then echo "$basename: creating ROM image" >&2; fi
ln "$d/$b" a.elf
sparc-linux-gnu-objcopy -O binary a.elf a.bin
sparc-linux-gnu-objdump -s -b binary a.bin >rom.dat
cp rom.dat ddr.dat

runner_cmdline=("$view_script" "$SIMGFX" "$TBDEF" $SIMARGS)

if test -n "${VERBOSE:-}"; then
    echo "$basename: cwd=$PWD" >&2
    echo "$basename: running: ${runner_cmdline[*]}" >&2
fi  
exec "${runner_cmdline[@]}"
