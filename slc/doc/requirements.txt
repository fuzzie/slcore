===================================
 Prerequisites for the SL compiler
===================================

:Date: 2010-12-14

:Abstract: This document explains what are the prerequisites for the
  SL compiler and how to install them.

Introduction
============

The SL "compiler" is actually a front-end that drives the execution of
other tools, the actual compilers. For each possible SVP target a
different set of compilation tools is driven by the SL compiler. For
example the µTC-PTL target uses the host C++ compiler; the Microgrid
target uses an Alpha cross-compiler, etc.

As the intent of the SL compiler is to support all these targets at
the same time, all the underlying tools must be available together as
a prerequisite to configure and install ``slc``. This document
clarifies the steps required to to install these prerequisites.

Overview of prerequisites
=========================

The diagram below gives an overview of the various non-trivial
prerequisites and their dependencies. They are discussed in details
throughout this document.

.. note:: This overview and the rest of the document does not describe
   what are the Sparc-related dependencies and how to install them,
   although most of the driving machinery is already implemented in
   ``slc``. This information will be added later.
  
.. figure:: sl_deps.png
   :width: 80%

   Overview of the requirements for SLC.

   In this diagram the square boxes correspond to software; the
   rounded boxes correspond to actions.

   Purple items correspond to prerequisites to be obtained from
   external sources. Green items are the actual requirements for the
   configuration & installation of ``slc``.

Overall installation strategy:

- phase 1:

  - install the (modified) binutils for target ``mtalpha-linux-gnu``;

- phase 2:

  - install the modified GCC compiler (target ``mtalpha-linux-gnu``);

- phase 3

  - (optionally) install the Microgrids simulator;

  - install the SL compiler.

.. note:: For ease of use all installations should be performed to the
   same destination directory (``configure --prefix=...``, see below).

Entry-level prerequisites
=========================

The SL compiler requires the following basic tools:

- the Bourne-Again shell (bash);

- Python version 2.5 or later. 

Additionally, the installation of the requirements themselves 
require the following:

- C90 compiler
- sh (Bourne-Again or POSIX)
- awk (POSIX or svr4)
- bzip2 (v1.0.2 or later)
- gzip (v1.2.4 or later)
- sed (POSIX or svr4)
- svn client (v1.4 or later)
- wget / fetch
- GNU tar (v1.14 or later)
- GNU GMP (v4.3 or later)
- GNU MPFR (v3 or later)
- GNU MPC (v0.8 or later)
- GNU make (v3.80 or later)
- GNU Autoconf (v2.65 or later)
- GNU Automake (v1.11 or later)
- GNU Texinfo (v4.13 or later)

As we expect all the systems where ``slc`` will be used to have a
standard way to install these tools (package manager, etc), their
installation is not described here.

Building the slc documentation requires the following tools as well:

- help2man
- docutils (v0.5 or later)
- a "recent enough" LaTeX distribution, with extras (e.g. ``multirow``)
- pdflatex

.. note:: (re)building the documentation is only necessary in case the
   documentation is modified, or when working from the Subversion
   repository. Distributed archives produced by ``make dist`` contain
   the compiled PDF files and therefore do not require the additional
   tools.

.. note:: docutils uses the LaTeX package "aeguill", which on
   Debian/Ubuntu is provided by the non-obvious
   ``texlive-lang-french`` package. 

Automated installation of prerequisites
=======================================

For convenience, all the steps described in the rest of this document
have been collected into an installer package available in a separate
``deploy`` repository.


Conclusion
==========

This document describes the various prerequisites for the SL compiler,
and how to get and install them.

These steps are automated in an installer (see `Automated installation
of prerequisites`_ above) that can be obtained separately.

